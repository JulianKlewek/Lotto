# Use root/example as user/password credentials
services:

  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: lotto
    volumes:
      - ../volumes/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - lottery-net

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8088:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - lottery-net

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example
      POSTGRES_DB: lotto
    networks:
      - lottery-net

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8089:8082"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USERNAME: root
      ADMINER_DEFAULT_PASSWORD: example
      ADMINER_DEFAULT_TYPE: postgresql
      ADMINER_DEFAULT_PORT: 5432
      ADMINER_DEFAULT_DB: lotto
    depends_on:
      - postgres
    networks:
      - lottery-net

  discovery-server:
    build: discovery-server-service
    image: julekkl/lottery/discovery-server:latest
    container_name: discovery-server
    restart: unless-stopped
    ports:
      - "8761:8761"
    networks:
      - lottery-net

  gateway-service:
    build: gateway-service
    image: julekkl/lottery/gateway-service:latest
    container_name: gateway-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - discovery-server
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/

  numbers-generator:
    build: numbers-generator
    image: julekkl/lottery/numbers-generator
    container_name: numbers-generator
    restart: unless-stopped
    depends_on:
      - mongo
      - discovery-server
      - gateway-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      spring.data.mongodb.host: mongo

  lotto-engine:
    build: lotto-engine
    image: julekkl/lottery/lotto-engine
    container_name: lotto-engine
    restart: unless-stopped
    depends_on:
      - mongo
      - discovery-server
      - gateway-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      spring.data.mongodb.host: mongo

  auth-service:
    build: authentication-service
    image: julekkl/lottery/authentication-service
    container_name: authentication-service
    restart: unless-stopped
    depends_on:
      - postgres
      - discovery-server
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      spring.datasource.url: jdbc:postgresql://postgres:5432/lotto
      #      spring.jpa.properties.hibernate.tmp.use_jdbc_metadata_defaults: false
      spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

networks:
  lottery-net:
    driver: bridge