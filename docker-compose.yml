services:

  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: lotto
    volumes:
      - ./volumes/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - lottery-net

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8088:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - lottery-net

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: lotto
    volumes:
      - ./volumes/postgres:/docker-entrypoint-initdb.d
    networks:
      - lottery-net

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8089:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - lottery-net

  discovery-server:
    build: discovery-server-service
    image: julekkl/lottery/discovery-server:latest
    container_name: discovery-server
    restart: unless-stopped
    ports:
      - "8761:8761"
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - lottery-net

  configuration-service:
    build: config-server
    image: julekkl/lottery/config-server:latest
    container_name: config-server
    restart: unless-stopped
    depends_on:
      discovery-server:
        condition: service_healthy
        restart: true
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/

  gateway-service:
    build: gateway-service
    image: julekkl/lottery/gateway-service:latest
    container_name: gateway-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - configuration-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/

  numbers-generator:
    build: numbers-generator
    image: julekkl/lottery/numbers-generator
    container_name: numbers-generator
    restart: unless-stopped
    depends_on:
      - mongo
      - configuration-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker

  lottery-engine:
    build: lotto-engine
    image: julekkl/lottery/lottery-engine
    container_name: lottery-engine
    restart: unless-stopped
    depends_on:
      - mongo
      - configuration-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker

  auth-service:
    build: authentication-service
    image: julekkl/lottery/authentication-service
    container_name: authentication-service
    restart: unless-stopped
    depends_on:
      - postgres
      - configuration-service
    networks:
      - lottery-net
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker

networks:
  lottery-net:
    driver: bridge